/// Helper for `o-brand` function.
/// @access private
@function _oTableGet($variables, $from: null) {
    @return oBrandGet($component: 'o-table', $variables: $variables, $from: $from);
}

/// Helper for `o-brand` function.
/// @access private
@function _oTableSupports($variant) {
    @return oBrandSupportsVariant($component: 'o-table', $variant: $variant);
}

/// Add support for custom brands.
/// @param {string} $brand - The name of your custom brand.
/// @param {map} $config - Your brand configuration, a map with variables and supports-variants E.g. ('variables': (), 'supports-variants': ()). See [the readme](https://registry.origami.ft.com/components/o-table@7.0.7/readme) for avalible options.
/// @access public
@function oTableDefine($brand, $config) {
    @return oBrandDefine('o-table', $brand, $config);
}

@if oBrandGetCurrentBrand() == 'master' {
	@include oBrandDefine('o-table', 'master', (
		'variables': (
			table-background: oColorsGetPaletteColor('paper'),
			table-alternate-background: oColorsGetPaletteColor('wheat'),
			table-border-color: oColorsGetPaletteColor('black-20'),
			table-data-color: oColorsGetColorFor(body, text),
			table-footnote-color: oColorsGetPaletteColor('black-60'),
			'flat': (
				table-item-alternate-background: oColorsMix('wheat', 'paper', 40)
			)
		),
		'supports-variants': (
			'stripes',
			'compact'
		)
	));
}

@if oBrandGetCurrentBrand() == 'internal' {
	@include oBrandDefine('o-table', 'internal', (
		'variables': (
			table-background: oColorsGetPaletteColor('white'),
			table-alternate-background: oColorsGetPaletteColor('slate-white-5'),
			table-border-color: oColorsGetPaletteColor('black-20'),
			table-data-color: oColorsGetColorFor(body, text),
			table-footnote-color: oColorsGetPaletteColor('black-60'),
			'flat': (
				table-item-alternate-background: oColorsGetPaletteColor('slate-white-5')
			)
		),
		'supports-variants': (
			'stripes',
			'compact',
			'row-headings'
		)
	));
}

@if oBrandGetCurrentBrand() == 'whitelabel' {
	@include oBrandDefine('o-table', 'whitelabel', (
		'variables': (),
		'supports-variants': (
			'compact'
		)
	));
}
